var e=Object.defineProperty,t=(t,n,s)=>((t,n,s)=>n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[n]=s)(t,"symbol"!=typeof n?n+"":n,s);import{T as n,a as s,D as r}from"./toolPaneView-BkZhzbTB.js";import{f as i}from"./index-iNH1zFVl.js";import{P as a}from"./priceLabelPriceAxisView-CKrbEFjY.js";import{T as o}from"./timeLabelTimeAxisView-DLVMuesT.js";import{bD as l,u as c,y as h,z as u,bK as d,A as p}from"./index-5gyre0hA.js";import{P as m,T as x}from"./axisPaneView-B6qY_qE1.js";import{C as w}from"./composite-CCMtJLBO.js";import"./baseTool-BM5mqL4_.js";class y extends l{drawImpl(e){if(!this._data)return;const t=this._data.points;if(t.length<2)return;const n=e.context;n.fillStyle=this._data.color,n.strokeStyle=this._data.color,n.lineJoin="round",n.lineCap="round";let s=new c(t[0]);const r=new c(t[1]);let i=r.subtract(s);i.length()<22&&(s=r.addScaled(i.normalized(),-22),i=r.subtract(s));const a=new c(i.y,-i.x).normalized(),o=this._arrowGeometry(i.length()),l=i.normalized();n.lineWidth=(()=>{let e=Math.round(.02*i.length());return e=Math.min(e,5),e=Math.max(e,2),e})(),n.beginPath(),n.moveTo(s.x,s.y);for(let c=0;c<o.length;c++){const e=o[c],t=s.addScaled(l,e.x).addScaled(a,e.y);n.lineTo(t.x,t.y)}n.lineTo(t[1].x,t[1].y);for(let c=o.length-1;c>=0;c--){const e=o[c],t=s.addScaled(l,e.x).addScaled(a,-e.y);n.lineTo(t.x,t.y)}n.lineTo(s.x,s.y),n.stroke(),n.fill()}_arrowGeometry(e){const t=_(e),n=[],s=e-t+t*(e>=35?.1:0),r=e-t,i=e,a=1.22*t;return n.push({x:0,y:0}),n.push({x:s,y:a/4}),n.push({x:r,y:a/2}),n.push({x:i,y:0}),n}_hittestGeometry(e){const t=_(e),n=[],s=e-t,r=e,i=1.22*t,a=i/4,o=i/2;return n.push({x:0,y:0}),n.push({x:s,y:a}),n.push({x:s,y:o}),n.push({x:r,y:0}),n}hitTest({x:e,y:t}){if(!this._data)return null;const n=this._data.points;if(n.length<2)return null;const s=new c(e,t),r=new c(n[1]);let i=new c(n[0]),a=r.subtract(i);const o=a.length();o<22&&(i=r.addScaled(a.normalized(),-22),a=r.subtract(i));const l=s.subtract(i),p=a.dotProduct(l)/o;if(p<0||p>o)return null;const m=a.scaled(1/o),x=i.addScaled(m,p),w=s.subtract(x),y=d().line,_=this._hittestGeometry(o);for(let c=_.length-2;c>=0;c--){const e=_[c],t=_[c+1];if(p>=e.x){const n=t.x-e.x,s=t.y-e.y,r=(p-e.x)/n,i=e.y+s*r;return w.length()<=i+y?new h(u.MovePoint):null}}return w.length()<3?new h(u.MovePoint):null}}function _(e){if(e<92)return 18;let t=.25*e;return t=Math.min(t,106),t=Math.max(t,18),t=Math.min(t,.9*e),t}class f extends n{constructor(){super(...arguments),t(this,"_renderer",new w(this._hitTestCollector)),t(this,"_arrowRenderer",new y)}renderer(){return this._renderer}_updateImpl(){this._renderer.clear();const e=this._source.properties();this._arrowRenderer.setData({points:this.points(),color:e.color}),this._renderer.append(this._arrowRenderer),this.addAnchors(this._renderer)}}class b extends s{constructor(){super(...arguments),t(this,"_lines",new f(this,this.model)),t(this,"_paneView",[this._lines]),t(this,"_priceAxisPaneViews",[new m(Object.create(null))]),t(this,"_timeAxisPaneViews",[new x(Object.create(null))]),t(this,"_timeAxisViews",[new o(Object.create(null)),new o(Object.create(null))]),t(this,"_priceAxisViews",[new a(Object.create(null)),new a(Object.create(null))])}pointsCount(){return 2}updateAllViews(){if(!this.controlPoints.length)return;const e=[],t=[],n=[];for(let s=0;s<this.controlPoints.length;s++){const t=this.controlPoints[s],n=this.pointToScreenPoint(t);if(!n)return;e.push(new p(n,{pointIndex:s}))}n.length>1&&this._priceAxisPaneViews[0].update(this._calculatePriceAxisPaneViewData(Math.min.apply(null,n),Math.max.apply(null,n))),t.length>1&&this._timeAxisPaneViews[0].update(this._calculateTimeAxisPaneViewsData(Math.min.apply(null,t),Math.max.apply(null,t))),this._lines.update({points:e})}}class P extends r{constructor(){super(...arguments),t(this,"type",i)}createPrimitive(){return new b({id:this.id,points:[],color:"#1E53E5FF"},...this.resetArgs)}}export{P as ArrowMarkerTool};
