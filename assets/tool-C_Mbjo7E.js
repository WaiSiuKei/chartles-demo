var t=Object.defineProperty,e=(e,i,o)=>((e,i,o)=>i in e?t(e,i,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[i]=o)(e,"symbol"!=typeof i?i+"":i,o);import{aX as i,r as o,G as r,bV as s,z as n,B as a,w as l,u as h,v as d,y as c,M as p,e as x,A as f,aQ as u}from"./index-5gyre0hA.js";import{g as w}from"./toolPaneView-BkZhzbTB.js";import{b as m,B as g,a as _}from"./textPaneView-LQytaZVw.js";import{P as T}from"./priceLabelPriceAxisView-CKrbEFjY.js";import{T as b}from"./timeLabelTimeAxisView-DLVMuesT.js";import{i as P,c as C}from"./text-BFLAaZ9z.js";import{d as M}from"./ctx-BQtFq0AI.js";import{m as v}from"./font-DVjjKW8j.js";import{C as S}from"./composite-CCMtJLBO.js";import{s as y}from"./svg-D8gy4lKT.js";import{w as V}from"./text-BhorOBkg.js";import"./baseTool-BM5mqL4_.js";let A;function B(){return A||(A=y('<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 30" width="24" height="30"><path fill="#2962FF" fill-rule="evenodd" d="m12 30 .88-.77C20.25 22.73 24 17.07 24 12.09 24 5.04 18.54 0 12 0S0 5.04 0 12.1c0 4.97 3.75 10.64 11.12 17.13L12 30Zm0-13a5 5 0 1 0 0-10 5 5 0 0 0 0 10Z"/></svg>\n'))}function F(t){const{ctx:e,scope:i,left:o,top:r,width:s,height:n,point:a,caretPos:l,mode:h}=t,{horizontalPixelRatio:d,verticalPixelRatio:c}=i,p=Math.max(1,Math.floor(d))%2/2,x=Math.round(a.x*d)+p,f=0===h?Math.max(1,Math.floor(d)):0,u=Math.round(o*d)+f/2,w=Math.round(r*c)+f/2,m=Math.round(s*d)-f,g=Math.round(n*c)-f,_=Math.round(12*d),T=Math.round(10*c),b=x-_/2,P=x+_/2,C=Math.atan(10/6),M=4*Math.cos(C),v=4*Math.sin(C),S=4*d;if(e.beginPath(),e.moveTo(u,w+S),e.arcTo(u,w,u+S,w,S),"top"===l){const t=w,i=w-T;e.lineTo(b-S,t),e.arcTo(b,t,b+M,t-v,S),e.lineTo(x-1.2*M,i+1.2*v),e.arcTo(x,i,x+1.2*M,i+1.2*v,1.2*M),e.lineTo(P-M,t-v),e.arcTo(P,t,P+S,t,S)}if(e.lineTo(u+m-S,w),e.arcTo(u+m,w,u+m,w+S,S),e.lineTo(u+m,w+g-S),e.arcTo(u+m,w+g,u+m-S,w+g,S),"bottom"===l){const t=w+g,i=t+T;e.lineTo(P+S,t),e.arcTo(P,t,P-M,t+v,S),e.lineTo(x+1.2*M,i-1.2*v),e.arcTo(x,i,x-1.2*M,i-1.2*v,1.2*M),e.lineTo(b+M,t+v),e.arcTo(b,t,b-S,t,S)}e.lineTo(u+S,w+g),e.arcTo(u,w+g,u,w+g-S,S),e.closePath()}class j extends a{hitTest(t){if(null!==this._data){const{point:e,left:i,top:o,width:r,height:s,tooltipVisible:a}=this._data,x=e.x,f=e.y,u=B().viewBox(),w=l(new h(x-u.width/2,f-u.height),new h(x+u.width/2,f));if(d(t,w))return new c(n.MovePoint);if(a){const e=l(new h(i,o),new h(i+r,o+s));if(d(t,e))return new c(n.MovePoint,{areaName:p.Text,cursorType:this._data.cursorType});const a=w.min.y,x=e.min.y,f=x<a?w.max.y:e.max.y,u=x<a?x:a,m=l(new h(w.min.x-8,f),new h(w.max.x+8,u));if(d(t,m))return new c(n.MovePoint)}}return null}drawImpl(t){if(!this._data)return;const{horizontalPixelRatio:e,verticalPixelRatio:i,context:o}=t,r=Math.max(1,Math.floor(e))%2/2,s=Math.max(1,Math.floor(i))%2/2,{point:n,markerColor:a}=this._data,l=Math.round(n.x*e)+r,h=Math.round(n.y*i)+s,d=B().viewBox();o.fillStyle=a,B().render(o,{targetViewBox:{x:l-e*d.width/2,y:h-e*d.height,width:e*d.width,height:e*d.height},doNotApplyColors:!0}),this._data.tooltipVisible&&this._drawTooltipOn(o,t)}_drawTooltipOn(t,e){t.save();const i=x(this._data),{point:o,textColor:r,font:s,fontSize:n,backgroundColor:a,borderColor:l,boxShadowColor:h,width:d,textWidth:c,left:p,top:f,height:u,lineSpacing:w,caretPos:m,lines:g}=i,{horizontalPixelRatio:_,verticalPixelRatio:T}=e;if(t.font=s,a){t.fillStyle=a;let i=!1;h&&(t.save(),t.shadowColor=h,t.shadowBlur=4,t.shadowOffsetX=0,t.shadowOffsetY=2,i=!0),F({ctx:t,scope:e,left:p,top:f,width:d,height:u,point:o,caretPos:m,mode:1}),t.fill(),i&&t.restore()}l&&(t.lineWidth=Math.max(1,Math.floor(_)),t.strokeStyle=l,F({ctx:t,scope:e,left:p,top:f,width:d,height:u,point:o,caretPos:m,mode:0}),t.stroke()),t.textBaseline="middle",t.fillStyle=r,t.textAlign=P()?"right":"left";const b=p+12+C(t,c);let v=f+12+n/2;M(t,_,T,(()=>{for(const e of g)t.fillText(e,b,v),v+=n+w})),t.restore()}getTextInfo(){const{font:t,fontSize:e,width:i,left:o,top:r,height:s,lineSpacing:n}=x(this._data);return{font:t,fontSize:e,lineSpacing:n,textTop:r+12,textBottom:r+s-12,textLeft:o+12,textRight:o+i-12,textAlign:P()?"right":"left"}}}class k extends m{constructor(){super(...arguments),e(this,"_renderer",new S(this._hitTestCollector)),e(this,"_pinRenderer",new j),e(this,"_textWidthCache",new i)}renderer(){return this._renderer}isLabelVisible(){return this.isHoveredSource()||this.isSelectedSource()}_updateImpl(){this._renderer.clear();const t=this._data;if(!t||0===t.points.length)return;const e=this.isLabelVisible(),i=this._source.properties(),a=v(i.fontSize,o,i.italic?"italic":void 0,i.bold?"bold":void 0);let l,h;i.drawBackground&&(l=i.backgroundColor,h="rgba(0, 0, 0, 0.2)");const{mediaSize:d}=this._source.getScope(),c=Math.min(236,d.width),p=c-24,x=this.points()[0],f=V(this._textDisplay(),a,this._textWidthCache,!1,p),u=f.filter((t=>!t.hidden)).map((t=>t.text)),w=i.fontSize;let m=u.length*w+24;u.length>1&&(m+=5*(u.length-1));let g=Math.round(x.x-c/2);const _=B().viewBox();let T=Math.round(x.y-_.height-m-13);const b=x.x<24||x.x+24>d.width;let P=b?null:"top";T<10?T=x.y+13:b||(P="bottom"),g<10?g=10:g+c+10>d.width&&(g=d.width-c-10),this._pinRenderer.setData({linesIncludingHidden:f,lines:this._isTextEditMode()?[]:u,font:a,fontSize:w,backgroundColor:l,boxShadowColor:h,borderColor:i.drawBorder?i.borderColor:void 0,textColor:this._textDisplayColor(),markerColor:i.markerColor,point:x,tooltipVisible:e,width:c,height:m,left:g,top:T,caretPos:P,lineSpacing:5,textWidth:p,cursorType:this.isSelectedSource()?r.text:r.unset}),this._updateEditor(this._pinRenderer.getTextInfo()),this._renderer.append(this._pinRenderer);const C=new s({points:this.points(),bgColors:this._lineAnchorColors(this.points()),visible:this.areAnchorsVisible(),hitTarget:n.MovePoint});this._renderer.append(C)}}class z extends g{constructor(){super(...arguments),e(this,"_lines",new k(this,this.model,this.editingHelper)),e(this,"_paneView",[this._lines]),e(this,"_timeAxisViews",[new b(Object.create(null))]),e(this,"_priceAxisViews",[new T(Object.create(null))]),e(this,"_fixedPoint",null)}pointsCount(){return 1}isFixed(){return this.properties().fixed}addPoint(t,e){return this.isFixed()&&(this._fixedPoint=this.pointToScreenPoint(t)),super.addPoint(t,e)}updateAllViews(){if(!this.controlPoints.length)return;const t=[],[e]=this.controlPoints,i=this.isFixed()?x(this._fixedPoint):this.pointToScreenPoint(e);if(!i)return;const o=new f(i,{pointIndex:0,hitTarget:n.ChangePoint});t.push(o),this.isFixed()||(this._timeAxisViews[0].update(this._calculateTimeAxisViewData(e.time,i.x)),this._priceAxisViews[0].update(this._calculatePriceAxisViewData(e.price,i.y))),this._lines.update({points:t})}isCreationFinished(){return this._lines.isCreationFinished()}startTextEditing(){return this._lines.startTextEditing()}}class R extends _{constructor(){super(...arguments),e(this,"type",u),e(this,"fixed",!1)}createPrimitive(t){const e=w(t);return new z({id:this.id,points:[],text:"",placeholder:e.t("tool.text.common.addText"),fontSize:14,textColor:"#1A1A1AFF",markerColor:"#2962FFFF",drawBackground:!0,backgroundColor:"#ffffff",drawBorder:!1,borderColor:"#EBEBEBFF",wordWrap:!0,fixed:this.fixed},...this.getTextResetArgs(t))}}export{R as PinTool};
