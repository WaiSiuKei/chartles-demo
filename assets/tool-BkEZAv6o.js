var t=Object.defineProperty,e=(e,i,o)=>((e,i,o)=>i in e?t(e,i,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[i]=o)(e,"symbol"!=typeof i?i+"":i,o);import{g as i}from"./toolPaneView-BkZhzbTB.js";import{b as o,T as s,B as r,a}from"./textPaneView-LQytaZVw.js";import{at as n}from"./index-iNH1zFVl.js";import{y as l,z as h,M as d,B as c,G as x,r as p,u,e as w,bL as _,w as f,v as g,bJ as m,bK as b,A as P}from"./index-5gyre0hA.js";import{P as T}from"./priceLabelPriceAxisView-CKrbEFjY.js";import{T as C}from"./timeLabelTimeAxisView-DLVMuesT.js";import{P as A,T as y}from"./axisPaneView-B6qY_qE1.js";import{B as R,V as D,H as M,e as B}from"./text-BhorOBkg.js";import{i as V}from"./text-BFLAaZ9z.js";import{C as k}from"./composite-CCMtJLBO.js";import"./baseTool-BM5mqL4_.js";import"./ctx-BQtFq0AI.js";const z=2,S=4,j=6,v=8,L=2,I=4,H=2;class F extends c{constructor(){super(...arguments),e(this,"_textLabelRenderer",new R),e(this,"_textInfoCache",null),e(this,"_lineHitTest",new l(h.MovePoint)),e(this,"_textHitTest",new l(h.MovePoint,{areaName:d.Text,cursorType:x.text}))}setTextHitTestResult(t){this._textHitTest=t}_calcTextSize(){if(null===this._data||this._data.points.length<2)return null;if(null===this._textInfoCache){const t=this._textLabelRenderer.getLinesInfo(),e=this._data.textData.fontSize*t.lines.length,i=t.linesMaxWidth,o=2*L+2*S;this._textInfoCache={textWidth:i,textHeight:e,totalWidth:i+o,totalHeight:e+o}}return this._textInfoCache}setData(t){null!==this._data&&this._data.textData.text===t.textData.text&&this._data.textData.fontSize===t.textData.fontSize||(this._textInfoCache=null),this._data=t;const e=t.points[1];this._textLabelRenderer.setData({horzAlign:M.Left,vertAlign:D.Middle,points:[e],text:t.textData.text||" ",color:t.textData.color,fontFamily:p,fontSize:t.textData.fontSize,bold:t.textData.bold,italic:t.textData.italic,offsetX:0,offsetY:0,borderColor:t.drawBorder?t.borderColor:void 0,borderWidth:1,backgroundColor:t.drawBackground?t.backgroundColor:void 0,backgroundRoundRect:S,boxPaddingVert:j,boxPaddingHorz:v,boxShadow:t.drawBorder||t.drawBackground?{shadowColor:t.shadowColor,shadowBlur:I,shadowOffsetY:H}:void 0,skipTextDrawing:t.skipTextDrawing});const i=this._textLabelRenderer.rect(),o=t.points[0],s=t.points[1],r=Math.round(180*Math.atan2(s.y-o.y,s.x-o.x)/Math.PI),a=B(r);let n=s;switch(a.horzAlign){case M.Center:n=n.add(new u(-.5*i.width,0));break;case M.Right:n=n.add(new u(-i.width,0))}switch(a.vertAlign){case D.Top:n=n.add(new u(0,.5*i.height));break;case D.Bottom:n=n.add(new u(0,-.5*i.height))}this._textLabelRenderer.setPoint(n)}getTextInfo(){var t,e;const i=w(this._data),o=V()?"right":"left",s=S,r=L,a=w(this._calcTextSize()),n=this._textLabelRenderer.rect(),l=w(null==(e=null==(t=this._textLabelRenderer.data())?void 0:t.points)?void 0:e[0]).add(new u(0,-.5*n.height)),{totalWidth:h,totalHeight:d}=a,c=s+r;return{font:p,fontSize:i.textData.fontSize,lineSpacing:0,textTop:Math.round(l.y+c),textBottom:l.y+d-c,textLeft:Math.floor(l.x+c),textRight:Math.ceil(l.x+h-c),textAlign:o}}hitTest(t){const e=this._data;if(null===e||e.points.length<2)return null;const i=b().line+.5,o=e.points[0],s=e.points[1];if(_(o,s,t).distance<=i)return this._lineHitTest;const r=this._textLabelRenderer.rect(),a=f(new u(r.x,r.y),new u(r.x+r.width,r.y+r.height));return g(t,a)?this._textHitTest:null}drawImpl(t){const e=this._data;if(null===e||e.points.length<2)return;const i=t.context,o=e.points[0],s=e.points[1];i.strokeStyle=e.lineColor,i.lineWidth=Math.max(1,Math.floor(t.horizontalPixelRatio)),i.beginPath();const[r,a]=m(i,o.x,o.y,s.x,s.y,t);i.stroke();const n=Math.round(z*t.horizontalPixelRatio);i.fillStyle=e.lineColor,i.beginPath(),i.arc(r,a,n,0,2*Math.PI,!1),i.fill(),i.beginPath(),i.strokeStyle=e.circleBorderColor,i.lineWidth=1;const l=Math.round(z*t.horizontalPixelRatio+.5*t.horizontalPixelRatio);i.arc(r,a,l,0,2*Math.PI,!1),i.stroke(),this._textLabelRenderer.drawImpl(t)}}class W extends o{constructor(){super(...arguments),e(this,"_renderer",new k(this._hitTestCollector)),e(this,"_noteRenderer",new F),e(this,"_mode",s.Preview)}renderer(){return this._renderer}_updateImpl(){if(this._renderer.clear(),!this._data)return;if(this._data.points.length<2)return;const t=this._source.properties(),e={textData:{fontSize:t.fontSize,text:this._textDisplay(),color:this._textDisplayColor(),bold:t.bold,italic:t.italic},shadowColor:"rgba(0, 0, 0, 0.2)",points:this.points(),lineColor:t.lineColor,drawBackground:t.drawBackground,drawBorder:t.drawBorder,backgroundColor:t.backgroundColor,borderColor:t.borderColor,circleBorderColor:"#ffffff",skipTextDrawing:this._isTextEditMode()};this._renderer.append(this._noteRenderer),this._noteRenderer.setData(e),this._noteRenderer.setTextHitTestResult(new l(h.MovePoint,{areaName:d.Text,cursorType:this._textCursorType()})),this._renderer.append(this.createLineAnchor({points:this.points()},0));const i=this._noteRenderer.getTextInfo();this._updateEditor(i)}}class E extends r{constructor(){super(...arguments),e(this,"_lines",new W(this,this.model,this.editingHelper)),e(this,"_paneView",[this._lines]),e(this,"_timeAxisViews",[new C(Object.create(null)),new C(Object.create(null))]),e(this,"_priceAxisViews",[new T(Object.create(null)),new T(Object.create(null))]),e(this,"_priceAxisPaneViews",[new A]),e(this,"_timeAxisPaneViews",[new y])}pointsCount(){return 2}updateAllViews(){if(!this.controlPoints.length)return;const t=[],e=[],i=[];for(let o=0;o<this.controlPoints.length;o++){const s=this.controlPoints[o],r=this.pointToScreenPoint(s);if(!r)return;e.push(r.x),i.push(r.y);const a=new P(r,{pointIndex:o,hitTarget:h.ChangePoint});t.push(a),this._timeAxisViews[o].update(this._calculateTimeAxisViewData(s.time,r.x)),this._priceAxisViews[o].update(this._calculatePriceAxisViewData(s.price,r.y))}e.length&&this._timeAxisPaneViews[0].update(this._calculateTimeAxisPaneViewsData(Math.min.apply(null,e),Math.max.apply(null,e))),i.length&&this._priceAxisPaneViews[0].update(this._calculatePriceAxisPaneViewData(Math.min.apply(null,i),Math.max.apply(null,i))),this._lines.update({points:t})}addPoint(t,e){const i=super.addPoint(t,e);return 1!==e||t.isTempForPreview||this.startTextEditing(),i}isCreationFinished(){return this._lines.isCreationFinished()}startTextEditing(){this._lines.startTextEditing()}}class O extends a{constructor(){super(...arguments),e(this,"type",n)}createPrimitive(t){const e=i(t);return new E({id:this.id,points:[],text:"",placeholder:e.t("tool.text.common.addText"),fontSize:14,textColor:"#1A1A1AFF",drawBackground:!0,backgroundColor:"#ffffff",drawBorder:!1,borderColor:"#EBEBEBFF",lineColor:"#1A1A1AFF",wordWrap:!0},...this.getTextResetArgs(t))}}export{O as NoteTool};
