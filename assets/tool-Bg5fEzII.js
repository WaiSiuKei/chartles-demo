var e=Object.defineProperty,t=(t,i,r)=>((t,i,r)=>i in t?e(t,i,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[i]=r)(t,"symbol"!=typeof i?i+"":i,r);import{T as i,a as r,D as s,g as n}from"./toolPaneView-BkZhzbTB.js";import{D as o}from"./index-iNH1zFVl.js";import{L as a,u as d,bH as l,r as h,y as c,z as p,A as x,e as u}from"./index-5gyre0hA.js";import{P as m}from"./priceLabelPriceAxisView-CKrbEFjY.js";import{T as _}from"./timeLabelTimeAxisView-DLVMuesT.js";import{P as w,T as b}from"./axisPaneView-B6qY_qE1.js";import{B as f,H as g,V as y,c as P}from"./text-BhorOBkg.js";import{C as A}from"./composite-CCMtJLBO.js";import{L as R}from"./line-BKuOqRrm.js";import{R as V}from"./rectangle-E0x1RaIQ.js";class F extends i{constructor(){super(...arguments),t(this,"_distanceLineRenderer",new R),t(this,"_distancePriceRenderer",new R),t(this,"_backgroundRenderer",new V),t(this,"_borderRenderer",new V),t(this,"_textRenderer",new f),t(this,"_renderer",new A(this._hitTestCollector))}renderer(){return this._renderer}_updateImpl(){if(this._renderer.clear(),this.points().length<2)return;const e=this._source.properties();this._backgroundRenderer.setData({points:this.points(),color:"white",lineWidth:0,lineStyle:a.solid,backColor:e.background,extendLeft:!1,extendRight:!1}),this._renderer.append(this._backgroundRenderer);const[t,i]=this.points();e.drawBorder&&(this._borderRenderer.setData({points:this.points(),color:e.borderColor,lineWidth:e.borderWidth,lineStyle:a.solid,backColor:"",extendLeft:!1,extendRight:!1}),this._renderer.append(this._borderRenderer));const r=e.drawBorder?e.borderWidth/2:0,{mediaSize:{height:s}}=this._source.getScope(),n=Math.round((t.y+i.y)/2),o=new d(t.x+Math.sign(i.x-t.x)*r,n),x=new d(i.x+Math.sign(t.x-i.x)*r,n);this._distanceLineRenderer.setData({points:[o,x],lineColor:e.lineColor,lineWidth:e.lineWidth,lineStyle:a.solid,extendLeft:!1,extendRight:!1,leftEnd:l.Normal,rightEnd:Math.abs(t.x-i.x)>=25*e.lineWidth?l.Arrow:l.Normal}),this._renderer.append(this._distanceLineRenderer);const u=Math.round((t.x+i.x)/2),m=new d(u,t.y+Math.sign(i.y-t.y)*r),_=new d(u,i.y+Math.sign(t.y-i.y)*r);let w;this._distancePriceRenderer.setData({points:[m,_],lineColor:e.lineColor,lineWidth:e.lineWidth,lineStyle:a.solid,extendLeft:!1,extendRight:!1,leftEnd:l.Normal,rightEnd:Math.abs(m.y-_.y)>=25*e.lineWidth?l.Arrow:l.Normal}),this._renderer.append(this._distancePriceRenderer),w=i.y>t.y?new d(.5*(t.x+i.x),i.y-2*e.fontSize):new d(.5*(t.x+i.x),i.y+.7*e.fontSize);const b={x:0,y:10},f=e.fontSize,A={points:[w],text:this._data.labelText,color:e.textColor,fontFamily:h,offsetX:b.x,offsetY:b.y,lineSpacing:8,vertAlign:y.Middle,horzAlign:g.Center,fontSize:f,backgroundRoundRect:4,boxPaddingHorz:.4*f+f/3,boxPaddingVert:.2*f+f/3,boxShadow:{shadowColor:e.boxShadow,shadowBlur:4,shadowOffsetY:1},backgroundColor:e.labelBackground};this._textRenderer.setData(A);const R=this._textRenderer.measure(),V=P(R,t,i,b,s);this._textRenderer.setPoint(V),this._textRenderer.setHitTestResult(new c(p.MovePoint)),this._renderer.append(this._textRenderer),e.showAnchors&&this.addAnchors(this._renderer)}}class S extends r{constructor(){super(...arguments),t(this,"_lines",new F(this,this.model)),t(this,"_paneView",[this._lines]),t(this,"_priceAxisPaneViews",[new w(Object.create(null))]),t(this,"_timeAxisPaneViews",[new b(Object.create(null))]),t(this,"_timeAxisViews",[new _(Object.create(null)),new _(Object.create(null))]),t(this,"_priceAxisViews",[new m(Object.create(null)),new m(Object.create(null))])}pointsCount(){return 2}updateAllViews(){if(!this.controlPoints.length)return;const[e,t]=this.controlPoints;if(!t)return;const i=this.pointToScreenPoint(e);if(!i)return;const r=this.pointToScreenPoint(t);if(!r)return;const s=[new x(i,{pointIndex:0}),new x(r,{pointIndex:1})];this._timeAxisViews[0].update(this._calculateTimeAxisViewData(e.time,i.x)),this._priceAxisViews[0].update(this._calculatePriceAxisViewData(e.price,i.y)),this._timeAxisViews[1].update(this._calculateTimeAxisViewData(t.time,r.x)),this._priceAxisViews[1].update(this._calculatePriceAxisViewData(t.price,r.y)),this._priceAxisPaneViews[0].update(this._calculatePriceAxisPaneViewData(i.y,r.y)),this._timeAxisPaneViews[0].update(this._calculateTimeAxisPaneViewsData(i.x,r.x));const n=[],o=t.price-e.price,a=o/e.price,d=o*this._props.base;n.push(`${this._ctx.priceLabelFormatter(o)} (${this._ctx.percentageFormatter(a)}) ${d.toFixed(0)}`);const l=u(this.chart.timeScale().timeToIndexEx(e.time)),h=u(this.chart.timeScale().timeToIndexEx(t.time))-l,c=this._ctx.timeSpanFormatter(e.time,t.time);n.push(`${this._props.formatBarCount(h)}, ${c}`),this._lines.update({points:s,labelText:n.join("\n")})}}class j extends s{constructor(){super(...arguments),t(this,"type",o)}getProps(e){return{id:this.id,points:[],lineColor:"#2962FFFF",lineWidth:2,background:"#2962FF26",textColor:"#000000FF",fontSize:12,labelBackground:"#FFFFFF",formatBarCount:t=>n(e).t("tool.line.common.bars",{count:t}),base:this.chartService.symbolInfo().pricescale,drawBorder:!1,borderWidth:2,borderColor:"#2962FFFF",boxShadow:"#00000033",showVolume:!0,showAnchors:!0}}createPrimitive(e){return new S(this.getProps(e),...this.resetArgs)}}const C=Object.freeze(Object.defineProperty({__proto__:null,DateAndPriceRangeTool:j},Symbol.toStringTag,{value:"Module"}));export{S as D,j as a,C as t};
