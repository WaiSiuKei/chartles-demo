var t=Object.defineProperty,e=(e,i,s)=>((e,i,s)=>i in e?t(e,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[i]=s)(e,"symbol"!=typeof i?i+"":i,s);import{bH as i,bD as s,y as n,z as r,aZ as a,bK as l,A as o,L as c}from"./index-5gyre0hA.js";import{T as h,a as d,D as p}from"./toolPaneView-BkZhzbTB.js";import{w as u}from"./index-iNH1zFVl.js";import{P as _}from"./priceLabelPriceAxisView-CKrbEFjY.js";import{T as m}from"./timeLabelTimeAxisView-DLVMuesT.js";import{P as w,T as x}from"./axisPaneView-B6qY_qE1.js";import{C as P}from"./composite-CCMtJLBO.js";import{L as b}from"./line-BKuOqRrm.js";import"./baseTool-BM5mqL4_.js";const f=[0,1,2,3,5,8,13,21,34,55,89];class g extends s{hitTest(t){if(null===this._data||this._data.points.length<2)return null;const e=this._data.points[0],i=this._data.points[1].subtract(e),s=i.normalized(),a=s.transposed(),o=t.subtract(e),c=this._data.counterclockwise?-1:1,h=o.normalized();let d=Math.acos(s.dotProduct(h));Math.asin(a.dotProduct(h))<0&&(d=2*Math.PI-d);const p=o.length(),u=l().curve;for(let l=0;l<4;l++){const t=c*d/(.5*Math.PI);let e=this._getFibonacciInterpolated(t+4*l);if(null!==e&&(e*=i.length()/5,Math.abs(e-p)<u))return new n(r.MovePoint)}return null}drawImpl(t){if(null===this._data||this._data.points.length<2)return;const e=t.context,i=this._data.points[0],s=this._data.points[1];e.save(),e.lineCap="round",e.strokeStyle=this._data.color,e.translate(i.x,i.y);let n=s.subtract(i);const r=n.length();n=n.normalized();let l=Math.acos(n.x);Math.asin(n.y)<0&&(l=2*Math.PI-l),e.rotate(l),e.scale(r/5,r/5),e.lineWidth=this._data.linewidth,a(e,this._data.linestyle);const o=Math.PI/100;e.beginPath(),e.moveTo(0,0);const c=this._data.counterclockwise?-1:1;for(let a=0;a<50*(f.length-1);a++){const t=c*a*o,i=this._getFibonacciInterpolated(a/50);if(null===i)break;const s=Math.cos(t)*i,n=Math.sin(t)*i;e.lineTo(s,n)}e.scale(5/r,5/r),e.rotate(-l),e.stroke(),e.restore()}_getFibonacciInterpolated(t){const e=Math.floor(t),i=Math.ceil(t);if(i>=f.length)return null;let s=t-e;return s=Math.pow(s,1.15),f[e]+(f[i]-f[e])*s}}class y extends h{constructor(){super(...arguments),e(this,"_trendLineRenderer",new b),e(this,"_spiralRenderer",new g),e(this,"_renderer",new P(this._hitTestCollector))}renderer(){return this._renderer}_updateImpl(){this._renderer.clear();const t=this.points();if((null==t?void 0:t.length)<2)return;const e=this._source.properties();{const s={points:t,lineColor:e.lineColor,lineWidth:e.lineWidth,lineStyle:e.lineStyle,extendLeft:!1,extendRight:!0,leftEnd:i.Normal,rightEnd:i.Normal};this._trendLineRenderer.setData(s),this._renderer.append(this._trendLineRenderer)}{const i={points:t,color:e.lineColor,linewidth:e.lineWidth,linestyle:e.lineStyle,counterclockwise:e.counterclockwise};this._spiralRenderer.setData(i),this._renderer.append(this._spiralRenderer)}this.addAnchors(this._renderer)}}class M extends d{constructor(){super(...arguments),e(this,"_lines",new y(this,this.model)),e(this,"_paneView",[this._lines]),e(this,"_priceAxisPaneViews",[new w(Object.create(null))]),e(this,"_timeAxisPaneViews",[new x(Object.create(null))]),e(this,"_timeAxisViews",[new m(Object.create(null)),new m(Object.create(null))]),e(this,"_priceAxisViews",[new _(Object.create(null)),new _(Object.create(null))])}pointsCount(){return 2}updateAllViews(){if(!this.controlPoints.length)return;const t=[];for(let s=0;s<this.controlPoints.length;s++){const e=this.controlPoints[s],i=this.pointToScreenPoint(e);if(!i)return;t.push(new o(i,{pointIndex:s}))}const e=t.map((t=>t.x)),i=t.map((t=>t.y));this.controlPoints.forEach(((e,i)=>{this._timeAxisViews[i].update(this._calculateTimeAxisViewData(e.time,t[i].x)),this._priceAxisViews[i].update(this._calculatePriceAxisViewData(e.price,t[i].y))})),e.length>1&&this._timeAxisPaneViews[0].update(this._calculateTimeAxisPaneViewsData(Math.min.apply(null,e),Math.max.apply(null,e))),i.length>1&&this._priceAxisPaneViews[0].update(this._calculatePriceAxisPaneViewData(Math.min.apply(null,i),Math.max.apply(null,i))),this._lines.update({points:t})}}class A extends p{constructor(){super(...arguments),e(this,"type",u)}createPrimitive(){return new M({id:this.id,points:[],lineWidth:2,lineColor:"#00BCD4",lineStyle:c.solid,counterclockwise:!1},...this.resetArgs)}}export{A as FibSpiralTool};
