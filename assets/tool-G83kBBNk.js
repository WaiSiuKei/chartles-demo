var e=Object.defineProperty,t=(t,i,s)=>((t,i,s)=>i in t?e(t,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[i]=s)(t,"symbol"!=typeof i?i+"":i,s);import{T as i,a as s,D as r}from"./toolPaneView-BkZhzbTB.js";import{aq as n}from"./index-iNH1zFVl.js";import{L as a,A as o,z as l}from"./index-5gyre0hA.js";import{P as c}from"./priceLabelPriceAxisView-CKrbEFjY.js";import{T as p}from"./timeLabelTimeAxisView-DLVMuesT.js";import{P as h,T as u}from"./axisPaneView-B6qY_qE1.js";import{C as d}from"./composite-CCMtJLBO.js";import{P as m}from"./polygon-D49cV0Ps.js";import"./baseTool-BM5mqL4_.js";import"./line-BKuOqRrm.js";class w extends i{constructor(){super(...arguments),t(this,"_renderer",new d(this._hitTestCollector)),t(this,"_polygonRenderer",new m)}renderer(){return this._renderer}_updateImpl(){this._renderer.clear();const e=this._source.properties();this._polygonRenderer.setData({points:this.points(),lineColor:e.lineColor,lineWidth:e.lineWidth,lineStyle:a.solid,filled:!0,background:e.backgroundColor,transparency:e.transparency}),this._renderer.append(this._polygonRenderer),this.addAnchors(this._renderer)}}class _ extends s{constructor(){super(...arguments),t(this,"_lines",new w(this,this.model)),t(this,"_paneView",[this._lines]),t(this,"_priceAxisPaneViews",[new h(Object.create(null))]),t(this,"_timeAxisPaneViews",[new u(Object.create(null))]),t(this,"_timeAxisViews",[new p(Object.create(null)),new p(Object.create(null)),new p(Object.create(null))]),t(this,"_priceAxisViews",[new c(Object.create(null)),new c(Object.create(null)),new c(Object.create(null))])}pointsCount(){return 3}updateAllViews(){if(!this.controlPoints.length)return;const e=[],t=[],i=[];for(let s=0;s<this.controlPoints.length;s++){const r=this.controlPoints[s],n=this.pointToScreenPoint(r);if(!n)return;e.push(n.x),t.push(n.y);const a=new o(n,{pointIndex:s,hitTarget:l.ChangePoint});i.push(a),this._timeAxisViews[s].update(this._calculateTimeAxisViewData(r.time,n.x)),this._priceAxisViews[s].update(this._calculatePriceAxisViewData(r.price,n.y))}e.length&&this._timeAxisPaneViews[0].update(this._calculateTimeAxisPaneViewsData(Math.min.apply(null,e),Math.max.apply(null,e))),t.length&&this._priceAxisPaneViews[0].update(this._calculatePriceAxisPaneViewData(Math.min.apply(null,t),Math.max.apply(null,t))),this._lines.update({points:i})}}class x extends r{constructor(){super(...arguments),t(this,"type",n)}createPrimitive(){return new _({id:this.id,points:[],lineColor:"#089981FF",lineWidth:2,backgroundColor:"rgba(8, 153, 129, 0.2)",transparency:80},...this.resetArgs)}}export{x as TriangleTool};
