var t=Object.defineProperty,e=(e,i,s)=>((e,i,s)=>i in e?t(e,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[i]=s)(e,"symbol"!=typeof i?i+"":i,s);import{T as i,a as s,i as r,D as n}from"./toolPaneView-BkZhzbTB.js";import{aa as o,ab as a}from"./index-iNH1zFVl.js";import{u as c,b0 as l,L as h,bH as p,e as d,c as u,A as P}from"./index-5gyre0hA.js";import{P as m}from"./priceLabelPriceAxisView-CKrbEFjY.js";import{T as f}from"./timeLabelTimeAxisView-DLVMuesT.js";import{P as _,T as x}from"./axisPaneView-B6qY_qE1.js";import{C as w}from"./composite-CCMtJLBO.js";import{L as C}from"./line-BKuOqRrm.js";import{R as D}from"./rectangle-E0x1RaIQ.js";import{V as g}from"./verticalLine-EvGXqPib.js";import"./baseTool-BM5mqL4_.js";const L={[o.Bars]:t=>[t[2],t[3]],[o.Line]:t=>t[4],[o.OpenClose]:t=>[t[1],t[4]],[o.LineOpen]:t=>t[1],[o.LineHigh]:t=>t[2],[o.LineLow]:t=>t[3],[o.LineHL2]:t=>(t[2]+t[3])/2},V="#808080";class T extends i{constructor(){super(...arguments),e(this,"_vertLineRenderer1",new g),e(this,"_vertLineRenderer2",new g),e(this,"_medianRenderer",new C),e(this,"_renderer",new w(this._hitTestCollector))}renderer(){return this._renderer}_updateImpl(){this._renderer.clear();const t=this.points();if((null==t?void 0:t.length)<2)return;const e=this._source.controlPoints,i=this._data.patternData,s=i.length;if(s>0&&2===e.length){const r=this._source.properties(),n=r.mode,a=r.color,h=Math.abs((t[0].x-t[1].x)/(s-1)),p=this._data.scale,u=t=>d(this._source.priceScale().priceToCoordinate(t))*p,[{time:P},{time:m}]=e,f=P<m?t[0]:t[1],_=f.x,x=f.y-u(this._data.firstPatternPrice);if(n===o.Bars||n===o.OpenClose){const e=L[n];for(let t=0;t<s;t++){const s=Math.round(_+t*h+.5),r=e(i[t]).map(((t,e)=>{const i=s+(2*e-1),r=Math.round(u(t))+x;return new c(i,r)})),n=new D;n.setData({points:r,color:a,backColor:a,lineWidth:1,transparency:10,extendLeft:!1,extendRight:!1}),this._renderer.append(n)}const r={points:t};this._renderer.append(this.createLineAnchor(r,0))}else l()}else this._vertLineRenderer1.setData({x:t[0].x,lineColor:V,lineWidth:1,lineStyle:h.solid}),this._renderer.append(this._vertLineRenderer1),this._vertLineRenderer2.setData({x:t[1].x,lineColor:V,lineWidth:1,lineStyle:h.solid}),this._renderer.append(this._vertLineRenderer2),this._medianRenderer.setData({points:t,lineColor:V,lineWidth:1,lineStyle:h.solid,extendLeft:!1,extendRight:!1,leftEnd:p.Normal,rightEnd:p.Normal}),this._renderer.append(this._medianRenderer)}}const b={0:2,1:4,2:1,3:1,4:2,5:3,6:-1},y={0:3,1:4,2:4,3:1,4:2,5:3,6:-1};class j extends s{constructor(){super(...arguments),e(this,"_lines",new T(this,this.model)),e(this,"_paneView",[this._lines]),e(this,"_priceAxisPaneViews",[new _(Object.create(null))]),e(this,"_timeAxisPaneViews",[new x(Object.create(null))]),e(this,"_timeAxisViews",[new f(Object.create(null)),new f(Object.create(null))]),e(this,"_priceAxisViews",[new m(Object.create(null)),new m(Object.create(null))]),e(this,"_pattern",[]),e(this,"_scale",1),e(this,"_pointsCoordinatePricesDiff",null)}pointsCount(){return 2}addPoint(t,e){const i=super.addPoint(t,e);if(r(i)&&1==e){const[t,e]=this.controlPoints,i=d(this.chart.timeScale().timeToIndex(t.time,!0)),s=d(this.chart.timeScale().timeToIndex(e.time,!0)),r=Math.min(i,s),n=Math.max(i,s);if(this._pattern=this._createPattern(r,n),this._pattern.length>0){i>s&&this.controlPoints.reverse();const t=this._patternPriceDiff();this.controlPoints[1].price=this.controlPoints[0].price+t,this.controlPoints[1].time=this.series.dataByIndex(n).time}this._updatePointsCoordinatePricesDiff()}return this.updateProps({indexPoints:u(this.controlPoints.slice()),points:this.controlPoints.map((t=>{const e=d(this.chart.timeScale().timeToIndex(t.time)),i=d(this.series.dataByIndex(e)).customValues.high,s=d(this.series.priceToCoordinate(i));return t.price=d(this.series.coordinateToPrice(s-33)),t}))}),i}setPoint(t,e,i){if(1===t&&e.time<=this.controlPoints[0].time){const t=d(this.chart.timeScale().timeToIndex(this.controlPoints[0].time));e.time=d(this.series.dataByIndex(t+1)).time}if(0===t&&e.time>=this.controlPoints[1].time){const t=d(this.chart.timeScale().timeToIndex(this.controlPoints[1].time));e.time=d(this.series.dataByIndex(t-1)).time}super.setPoint(t,e,i)}_updatePointsCoordinatePricesDiff(){this._pointsCoordinatePricesDiff=this._calculatePointsCoordinatePricesDiff()}_calculatePointsCoordinatePricesDiff(){if(2===this.controlPoints.length){const[{price:t},{price:e}]=this.controlPoints;return this._priceCoordinateDiff([t,e])??null}return null}_priceCoordinateDiff(t){const e=this._pricesToCoordinates(t);if(e)return e[1]-e[0]}_pricesToCoordinates(t){return t.map((t=>d(this.series.priceToCoordinate(t))))}firstPatternPrice(){const{mode:t,flipped:e}=this.properties(),i=this._pattern[0];if(t===o.LineHL2)return(i[2]+i[3])/2;const s=t;return e?i[y[s]]:i[b[s]]}lastPatternPrice(){const{mode:t,flipped:e}=this.properties(),i=this._pattern[this._pattern.length-1];if(t===o.LineHL2)return(i[2]+i[3])/2;const s=t;return e?i[y[s]]:i[b[s]]}_patternPriceDiff(){return this.lastPatternPrice()-this.firstPatternPrice()}_createPattern(t,e){const i=this.series.data(),s=[];for(let r=t;r<=e;r++){const t=d(i[r]);s.push([t.time,t.customValues.open,t.customValues.high,t.customValues.low,t.customValues.close])}return s}_calculateScale(){let t=1;if(2===this.controlPoints.length){const e=this._calculatePatternCoordinatePricesDiff();if(!e)return t;const i=this._calculatePointsCoordinatePricesDiff();if(null!==i&&(t=parseFloat((i/e).toFixed(8))),this._pointsCoordinatePricesDiff!==i){if(this._scale!==t)return this._updateLastPoint(),this._scale;this._updatePointsCoordinatePricesDiff()}}return t}_calculatePatternCoordinatePricesDiff(){return this._pattern.length>0?this._priceCoordinateDiff([this.firstPatternPrice(),this.lastPatternPrice()])??null:null}_updateLastPoint(){if(this.controlPoints.length<2)return;const t=this._scale,e=this._calculatePatternCoordinatePricesDiff(),i=this._pricesToCoordinates([this.controlPoints[0].price]);if(null!==e&&i){const s=+(t*e).toFixed(8)+i[0],r=d(this.series.coordinateToPrice(s));this.controlPoints[1].price=r,this._updatePointsCoordinatePricesDiff()}}getScale(){return this._scale=this._calculateScale()}updateAllViews(){if(!this.controlPoints.length)return;let t=NaN,e=NaN,i=[];this.isDrawing||(t=this.getScale(),e=this.firstPatternPrice(),i=this._pattern);const s=[];for(let o=0;o<this.controlPoints.length;o++){const t=this.controlPoints[o],e=this.pointToScreenPoint(t);if(!e)return;s.push(new P(e,{pointIndex:o}))}const r=s.map((t=>t.x)),n=s.map((t=>t.y));this.controlPoints.forEach(((t,e)=>{this._timeAxisViews[e].update(this._calculateTimeAxisViewData(t.time,s[e].x)),this._priceAxisViews[e].update(this._calculatePriceAxisViewData(t.price,s[e].y))})),r.length>1&&this._timeAxisPaneViews[0].update(this._calculateTimeAxisPaneViewsData(Math.min.apply(null,r),Math.max.apply(null,r))),n.length>1&&this._priceAxisPaneViews[0].update(this._calculatePriceAxisPaneViewData(Math.min.apply(null,n),Math.max.apply(null,n))),this._paneView[0].update({points:s,scale:t,firstPatternPrice:e,patternData:i})}}class A extends n{constructor(){super(...arguments),e(this,"type",a),e(this,"disableExtendTime",!0)}createPrimitive(){return new j({id:this.id,points:[],color:"#2962FF",indexPoints:[],mode:o.Bars,flipped:!1,mirrored:!1},...this.resetArgs)}onlyDrawingOnMainSeries(){return!0}}export{A as BarsPatternTool};
