var t=Object.defineProperty,e=(e,i,n)=>((e,i,n)=>i in e?t(e,i,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[i]=n)(e,"symbol"!=typeof i?i+"":i,n);import{B as i,y as n,z as l,bL as o,L as s,aZ as a,cf as r,cg as d,bM as h,c8 as c,u,bK as g,bO as p,cd as f,ce as _}from"./index-5gyre0hA.js";import{i as x}from"./line-Jebc4sVj.js";class y extends i{constructor(){super(...arguments),e(this,"_backgroundPolygon",null),e(this,"_clippedLines",new Map),e(this,"_hitTest",new n(l.MovePoint))}setData(t){super.setData(t),this._backgroundPolygon=null,this._clippedLines.clear()}hitTest(t,e){if(!this._data)return null;const{line1:i,line2:n,middleLine:l}=this._data,s=e.mediaSize,a=g().line;for(const r of[i,n,l]){if(!r)continue;const e=this._getClippedLine(r,this._data,s);if(e&&o(e.points[0],e.points[1],t).distance<=a)return this._hitTest}return null}drawImpl(t){if(!this._data)return;const{line1:e,line2:i,middleLine:n,skipLines:l,skipTopLine:o,fillBackground:s,backColor:a,excludeBoundaries:r}=this._data,d=t.context;if(d.lineCap="round",s&&i){const e=this._getBackgroundPolygon(this._data,t.mediaSize);if(e.length>0){d.beginPath();const i=e[0];d.moveTo(i.x*t.horizontalPixelRatio,i.y*t.verticalPixelRatio);for(let n=1;n<e.length;n++){const i=e[n];d.lineTo(i.x*t.horizontalPixelRatio,i.y*t.verticalPixelRatio)}d.fillStyle=a,d.fill()}}l||(e&&this._drawLine(t,e,this._data),!o&&i&&this._drawLine(t,i,this._data),n&&this._drawLine(t,n,this._data)),void 0!==r&&d.restore()}_drawLine(t,e,i){const n=this._getClippedLine(e,i,t.mediaSize);if(!n)return;const l=t.context;l.lineWidth=Math.max(1,Math.floor(n.lineWidth*t.horizontalPixelRatio)),l.lineCap=n.lineStyle===s.solid?"round":"butt",a(l,n.lineStyle),l.strokeStyle=n.color;const[o,d]=n.points,h=o.x*t.horizontalPixelRatio,c=o.y*t.verticalPixelRatio,u=d.x*t.horizontalPixelRatio,g=d.y*t.verticalPixelRatio;r(l,h,c,u,g)}_getClippedLine(t,e,i){if(this._clippedLines.has(t))return this._clippedLines.get(t)??null;const[n,l]=t.points,o=n.x!==l.x?{extendLeft:e.extendLeft,extendRight:e.extendRight}:void 0,s=d(t.lineWidth,t.lineStyle),a=x(n,l,!!(null==o?void 0:o.extendLeft),!!(null==o?void 0:o.extendRight),i.width,i.height,(r=s)&&0!==r.length?function(t,e){let i;for(let n=0;n<t.length;n++){const l=e(t[n]);void 0!==l&&(i=void 0===i?l:i+l)}return i}(r,(t=>t))??0:0);var r;const h=a?{...t,points:a}:null;return this._clippedLines.set(t,h),h}_getBackgroundPolygon(t,e){return this._backgroundPolygon||(this._backgroundPolygon=this._getBackgroundPolygonImpl(t,e)??[]),this._backgroundPolygon}_getBackgroundPolygonImpl(t,e){if(!t.line2)return null;const[i,n]=t.line1.points,[l,o]=t.line2.points;if(h(i,n)||h(l,o)||c(i,n,l).distance<1e-6||c(i,n,o).distance<1e-6)return null;if(e.width<=0||e.height<=0)return null;let s=[new u(0,0),new u(e.width,0),new u(e.width,e.height),new u(0,e.height)];return s=L(s,i,n,o),t.extendRight||(s=L(s,n,o,l)),s=L(s,o,l,i),t.extendLeft||(s=L(s,l,i,n)),s}}function L(t,e,i,n){if(null===t)return null;const l=p(e,i),o=f(l,n);return _(t,o)}export{y as P};
