var e=Object.defineProperty,t=(t,i,n)=>((t,i,n)=>i in t?e(t,i,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[i]=n)(t,"symbol"!=typeof i?i+"":i,n);import{u as i,y as n,z as s,A as r,bF as o,J as l,e as a,L as c}from"./index-5gyre0hA.js";import{T as p,a as h,D as d}from"./toolPaneView-BkZhzbTB.js";import{l as u,n as m}from"./index-iNH1zFVl.js";import{P}from"./priceLabelPriceAxisView-CKrbEFjY.js";import{T as w}from"./timeLabelTimeAxisView-DLVMuesT.js";import{P as _,T as x}from"./axisPaneView-B6qY_qE1.js";import{C as f}from"./composite-CCMtJLBO.js";import{P as b}from"./parallelChannel-DC2OIzzc.js";import"./baseTool-BM5mqL4_.js";import"./line-Jebc4sVj.js";class g extends p{constructor(){super(...arguments),t(this,"_channelRenderers",Array.from({length:u.length-1}).map((()=>new b))),t(this,"_renderer",new f(this._hitTestCollector))}renderer(){return this._renderer}_updateImpl(){this._renderer.clear();const e=this.points();if((null==e?void 0:e.length)<=1)return;const t=this._source.properties(),a=e[0],c=e[1];let p=0,h=null,d=null;3===e.length&&(p=e[2].y-e[0].y,h=a.add(new i(0,p)),d=c.add(new i(0,p)));const u=t.levels.filter((e=>e.visible));1===u.length&&u.push(u[0]),this._channelRenderers.length!==u.length-1&&(this._channelRenderers=Array.from({length:u.length-1}).map((()=>{const e=new b;return e.setHitTest(new n(s.MovePoint)),e})));const m=[],P=t.backgroundColor;for(let n=0;n<u.length-1;n++){const s=u[n],r=u[n+1];let o=a,l=c,h=a,d=c;if(3===e.length){const e=p*s.coeff,t=p*r.coeff;o=a.add(new i(0,e)),l=c.add(new i(0,e)),h=a.add(new i(0,t)),d=c.add(new i(0,t))}const w={line1:{color:s.lineColor,lineStyle:s.lineStyle,lineWidth:s.lineWidth,points:[o,l]},line2:h&&d?{color:r.lineColor,lineStyle:r.lineStyle,lineWidth:r.lineWidth,points:[h,d]}:void 0,skipTopLine:n!==u.length-2,extendLeft:t.extendLeft,extendRight:t.extendRight,fillBackground:t.fillBackground,backColor:P,hittestOnBackground:!0};m.push(w)}m.forEach(((e,t)=>{this._channelRenderers[t].setData(e),this._renderer.append(this._channelRenderers[t])}));const w=[];if(a&&w.push(a),c&&w.push(c),h&&d){w.push(new r(h,{pointIndex:2})),w.push(new r(d,{pointIndex:3}));const e=h.add(d).scaled(.5);w.push(new r(e,{pointIndex:4,resizeDirections:l,style:o.square}));const t=w[0].point.add(w[1].point).scaled(.5);w.push(new r(t,{pointIndex:5,resizeDirections:l,style:o.square}))}const _=3===e.length&&!h;(this._model.currentCreating===this._source||_)&&(w.pop(),w.pop()),this._renderer.append(this.createLineAnchor({points:w},0))}}class y extends h{constructor(){super(...arguments),t(this,"_lines",new g(this,this.model)),t(this,"_paneView",[this._lines]),t(this,"_priceAxisPaneViews",[new _(Object.create(null))]),t(this,"_timeAxisPaneViews",[new x(Object.create(null))]),t(this,"_timeAxisViews",[new w(Object.create(null)),new w(Object.create(null)),new w(Object.create(null)),new w(Object.create(null))]),t(this,"_priceAxisViews",[new P(Object.create(null)),new P(Object.create(null)),new P(Object.create(null)),new P(Object.create(null))])}pointsCount(){return 3}setPoint(e,t,i){switch(e){case 0:super.setPoint(e,t,i),this._props.points[2]={time:i.startPoints[2].time+i.deltaTime,price:i.startPoints[2].price+i.deltaPrice};break;case 1:super.setPoint(e,t,i);break;case 2:super.setPoint(e,t,i),this._props.points[0]={time:i.startPoints[0].time+i.deltaTime,price:i.startPoints[0].price+i.deltaPrice};break;case 3:this._props.points[1]={time:i.startPoints[1].time+i.deltaTime,price:i.startPoints[1].price+i.deltaPrice};break;case 4:this._props.points[2].price=i.startPoints[2].price+i.deltaPrice;break;case 5:this._props.points[0].price=i.startPoints[0].price+i.deltaPrice,this._props.points[1].price=i.startPoints[1].price+i.deltaPrice}}addPoint(e,t){return 2===t&&(e=this._convertLastPointTo3rdPoint(e)),super.addPoint(e,t)}_convertLastPointTo3rdPoint(e){const t=a(this.pointToScreenPoint(e)),n=a(this.pointToScreenPoint(this.controlPoints[1])),s=a(this.pointToScreenPoint(this.controlPoints[0])),r=n.subtract(s),o=(t.x-s.x)/r.x,l=s.addScaled(r,o),c=t.y-l.y,p=s.add(new i(0,c));return a(this.screenPointToPoint(p))}updateAllViews(){if(!this.controlPoints.length)return;const e=[];for(let n=0;n<this.controlPoints.length;n++){const t=this.controlPoints[n],i=this.pointToScreenPoint(t);if(!i)return;e.push(new r(i,{pointIndex:n}))}const t=e.map((e=>e.x)),i=e.map((e=>e.y));this.controlPoints.forEach(((t,i)=>{this._timeAxisViews[i].update(this._calculateTimeAxisViewData(t.time,e[i].x)),this._priceAxisViews[i].update(this._calculatePriceAxisViewData(t.price,e[i].y))})),t.length>1&&this._timeAxisPaneViews[0].update(this._calculateTimeAxisPaneViewsData(Math.min.apply(null,t),Math.max.apply(null,t))),i.length>1&&this._priceAxisPaneViews[0].update(this._calculatePriceAxisPaneViewData(Math.min.apply(null,i),Math.max.apply(null,i))),this._lines.update({points:e})}}class A extends d{constructor(){super(...arguments),t(this,"type",m)}createPrimitive(){return new y({id:this.id,points:[],lineColor:"#2A62FF",lineStyle:c.solid,lineWidth:2,fillBackground:!0,backgroundColor:"#2962FF33",extendLeft:!1,extendRight:!1,levels:u.map(((e,t)=>({lineColor:"#2A62FF",visible:[1,3,5].includes(t),coeff:e,lineStyle:3===t?c.dashed:c.solid,lineWidth:[1,5].includes(t)?2:1})))},...this.resetArgs)}}export{A as ParallelChannelTool};
