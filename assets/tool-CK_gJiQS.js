var t=Object.defineProperty,e=(e,i,s)=>((e,i,s)=>i in e?t(e,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[i]=s)(e,"symbol"!=typeof i?i+"":i,s);import{bD as i,aZ as s,bH as n,y as a,z as r,c7 as o,bK as l,L as d,e as c,A as h}from"./index-5gyre0hA.js";import{T as u,a as p,D as x}from"./toolPaneView-BkZhzbTB.js";import{ak as _}from"./index-iNH1zFVl.js";import{P}from"./priceLabelPriceAxisView-CKrbEFjY.js";import{T as b}from"./timeLabelTimeAxisView-DLVMuesT.js";import{P as m,T as f}from"./axisPaneView-B6qY_qE1.js";import{b as w,q as y,c as C,h as T}from"./bezierQuadro-Ds1JUniV.js";import{d as g}from"./line-BKuOqRrm.js";import{C as A}from"./composite-CCMtJLBO.js";import"./baseTool-BM5mqL4_.js";class V extends i{drawImpl(t){if(!this._data)return;const e=t.context;e.lineCap="round",e.strokeStyle=this._data.lineColor,e.lineWidth=this._data.lineWidth,s(e,this._data.lineStyle);const i=this._data.points[0],a=this._data.points[1];if(2===this._data.points.length)e.beginPath(),e.moveTo(i.x,i.y),e.lineTo(a.x,a.y),e.stroke(),this._data.leftEnd===n.Arrow&&g(a,i,e,e.lineWidth,o),this._data.rightEnd===n.Arrow&&g(i,a,e,e.lineWidth,o);else{const t=this._data.points[2],s=this._data.points[3],r=s.subtract(i),l=t.subtract(r.scaled(.25)),d=t.add(r.scaled(.25)),c=s.subtract(t),h=s.subtract(c.scaled(.25)),u=s.add(c.scaled(.25));this._data.fillBack&&this._data.points.length>2&&(e.fillStyle=this._data.backColor,e.beginPath(),e.moveTo(i.x,i.y),e.quadraticCurveTo(l.x,l.y,t.x,t.y),e.bezierCurveTo(d.x,d.y,h.x,h.y,s.x,s.y),e.quadraticCurveTo(u.x,u.y,a.x,a.y),e.fill()),e.beginPath(),w(e,this._data.extendLeftPoints),e.moveTo(i.x,i.y),e.quadraticCurveTo(l.x,l.y,t.x,t.y),e.bezierCurveTo(d.x,d.y,h.x,h.y,s.x,s.y),e.quadraticCurveTo(u.x,u.y,a.x,a.y),w(e,this._data.extendRightPoints),this._data.leftEnd===n.Arrow&&g(l,i,e,e.lineWidth,o),this._data.rightEnd===n.Arrow&&g(u,a,e,e.lineWidth,o),e.stroke()}}hitTest(t){const e=this._data;if(!e)return null;if(4!==e.points.length)return null;const i=l().curve,[s,n,o,d]=e.points,c=d.subtract(s),h=o.subtract(c.scaled(.25)),u=o.add(c.scaled(.25)),p=n.subtract(o),x=d.subtract(p.scaled(.25)),_=d.add(p.scaled(.25)),P=y(o,s,h,t,i),b=C(o,u,x,d,t,i),m=y(d,n,_,t,i);if(P||b||m)return new a(r.MovePoint);let f=T(t,i,e.extendLeftPoints);return null===f&&(f=T(t,i,e.extendRightPoints)),f}}class j extends u{constructor(){super(...arguments),e(this,"_renderer",new A(this._hitTestCollector)),e(this,"_bezierCubicRenderer",new V)}renderer(){return this._renderer}_updateImpl(){if(this._renderer.clear(),this.points().length<2)return;const t=this._source.properties(),e={points:this.points(),lineColor:t.lineColor,lineWidth:t.lineWidth,lineStyle:d.solid,leftEnd:t.leftEnd,rightEnd:t.rightEnd,fillBack:t.fillBack,backColor:t.backColor,extendLeftPoints:[],extendRightPoints:[]};this._bezierCubicRenderer.setData(e),this._renderer.append(this._bezierCubicRenderer),this.addAnchors(this._renderer)}}class v extends p{constructor(){super(...arguments),e(this,"_lines",new j(this,this.model)),e(this,"_paneView",[this._lines]),e(this,"_priceAxisPaneViews",[new m(Object.create(null))]),e(this,"_timeAxisPaneViews",[new f(Object.create(null))]),e(this,"_timeAxisViews",[new b(Object.create(null)),new b(Object.create(null))]),e(this,"_priceAxisViews",[new P(Object.create(null)),new P(Object.create(null))])}pointsCount(){return 2}updateMove(t,e){super.updateMove(t,e),1===e&&this._updateControlPoints()}addPoint(t,e){const i=super.addPoint(t,e);return 1===e&&this._updateControlPoints(),i}_updateControlPoints(){const t=this._calculateControlPoints();this.controlPoints[2]=t[0],this.controlPoints[3]=t[1]}_calculateControlPoints(){const t=c(this.pointToScreenPoint(this.controlPoints[0])),e=c(this.pointToScreenPoint(this.controlPoints[1])),i=e.subtract(t).scaled(.5).transposed().scaled(.3),s=t.add(e).scaled(1/3),n=t.add(e).scaled(2/3),a=s.add(i),r=n.subtract(i);return[this.screenPointToPoint(a),this.screenPointToPoint(r)]}updateAllViews(){if(!this.controlPoints.length)return;const t=[],e=[],i=[];for(let s=0;s<this.controlPoints.length;s++){const n=this.controlPoints[s],a=this.pointToScreenPoint(n);if(!a)return;t.push(a.x),e.push(a.y);const o=new h(a,{pointIndex:s,hitTarget:r.ChangePoint});i.push(o),s<2&&(this._timeAxisViews[s].update(this._calculateTimeAxisViewData(n.time,a.x)),this._priceAxisViews[s].update(this._calculatePriceAxisViewData(n.price,a.y)))}t.length&&this._timeAxisPaneViews[0].update(this._calculateTimeAxisPaneViewsData(Math.min.apply(null,t),Math.max.apply(null,t))),e.length&&this._priceAxisPaneViews[0].update(this._calculatePriceAxisPaneViewData(Math.min.apply(null,e),Math.max.apply(null,e))),this._lines.update({points:i})}}class k extends x{constructor(){super(...arguments),e(this,"type",_)}createPrimitive(){return new v({id:this.id,points:[],lineColor:"#2962FFFF",lineWidth:2,leftEnd:n.Normal,rightEnd:n.Normal,extendLeft:!1,extendRight:!1,fillBack:!1,backColor:"#2962FF33"},...this.resetArgs)}}export{k as DoubleCurveTool};
