var t=Object.defineProperty,e=(e,n,i)=>((e,n,i)=>n in e?t(e,n,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[n]=i)(e,"symbol"!=typeof n?n+"":n,i);import{B as n,e as i,bG as a,w as o,bT as r,y as s,z as d,u as l,bL as h,v as c,bM as u}from"./index-5gyre0hA.js";class x extends n{constructor(){super(...arguments),e(this,"_scope")}getColor(){const t=i(this._data);return t.backColor?void 0===t.transparency?t.backColor:a(t.backColor,t.transparency,!0):t.backColor}drawImpl(t){const e=this._data;if(this._scope=t,!e||e.points.length<2||e.lineWidth<=0&&!e.backColor)return;const{horizontalPixelRatio:n,verticalPixelRatio:i,bitmapSize:a}=t,{extendLeft:s,extendRight:d,lineWidth:l,middleLine:h,color:c}=e,[u,x]=e.points,m=o(u,x),_=l?Math.max(1,Math.floor(l*n)):0,g=this.getColor(),f=Math.max(1,Math.floor(n)),b=s?-l:Math.round(m.min.x*n),p=d?a.width+l:Math.round(m.max.x*n),M=Math.round(m.min.y*i),y=Math.round(m.max.y*i);r(t,b,p,M,y,f,g?{color:g}:void 0,0===_?void 0:{color:c,lineStyle:e.lineStyle,borderWidth:_,borderMode:"center"},h?{...h,lineWidth:Math.max(1,Math.floor(h.lineWidth*i))}:void 0)}hitTest(t){if(!this._data||this._data.points.length<2||!this._scope)return null;const e=new s(d.MovePoint),n=this._scope.mediaSize.width,[i,a]=this._data.points,r=o(i,a),c=r.min,u=r.max,x=new l(u.x,c.y),m=new l(c.x,u.y);if(this._extendAndHitTestLineSegment(t,c,x,n))return e;if(this._extendAndHitTestLineSegment(t,m,u,n))return e;let _=h(x,u,t);if(_.distance<=3)return e;if(_=h(c,m,t),_.distance<=3)return e;if(this._data.middleLine){const i=r.min.add(r.max).scaled(.5).y,a=new l(r.min.x,i),o=new l(r.max.x,i);if(this._extendAndHitTestLineSegment(t,a,o,n))return e}return this._data.fillBackground?this._hitTestBackground(t,c,u,n):null}_hitTestBackground(t,e,n,i){var a,r;const d=this._extendAndClipLineSegment(e,n,i);return null!==d&&c(t,o(d[0],d[1]))?this._backgroundHitTest??((null==(a=this._data)?void 0:a.backgroundHitTarget)?new s(null==(r=this._data)?void 0:r.backgroundHitTarget):null):null}_extendAndHitTestLineSegment(t,e,n,i){const a=this._extendAndClipLineSegment(e,n,i);if(null!==a){const[e,n]=a;if(h(e,n,t).distance<=3)return!0}return!1}_extendAndClipLineSegment(t,e,n){const a=i(this._data);if(u(t,e)&&!a.extendLeft&&!a.extendRight)return null;const o=Math.min(t.x,e.x),r=Math.max(t.x,e.x),s=a.extendLeft?0:Math.max(o,0),d=a.extendRight?n:Math.min(r,n);return s>d||d<=0||s>=n?null:[new l(s,t.y),new l(d,e.y)]}}export{x as R};
