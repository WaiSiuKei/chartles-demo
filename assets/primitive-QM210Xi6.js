var e=Object.defineProperty,t=(t,n,i)=>((t,n,i)=>n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[n]=i)(t,"symbol"!=typeof n?n+"":n,i);import{P as n}from"./priceLabelPriceAxisView-CKrbEFjY.js";import{T as i}from"./timeLabelTimeAxisView-DLVMuesT.js";import{A as r,bH as s,y as d,z as a,u as l}from"./index-5gyre0hA.js";import{P as o,T as h}from"./axisPaneView-B6qY_qE1.js";import{T as c,a as p}from"./toolPaneView-BkZhzbTB.js";import{C as f}from"./channel-Q-8H9X-L.js";import{L as _}from"./line-BKuOqRrm.js";import{C as u}from"./composite-CCMtJLBO.js";var x=(e=>(e[e.Original=0]="Original",e[e.SchiffModified=1]="SchiffModified",e[e.Inside=2]="Inside",e[e.Schiff=3]="Schiff",e))(x||{});class m extends c{constructor(){super(...arguments),t(this,"_medianRenderer",new _),t(this,"_sideRenderer",new _),t(this,"_renderer",new u(this._hitTestCollector))}renderer(){return this._renderer}_updateImpl(){this._renderer.clear();const e=this.points();if((null==e?void 0:e.length)<2)return;const[t,n,i]=e,s=3===e.length?n.add(i).scaled(.5):2===e.length?n:t,d=new r(s,{pointIndex:3});this._updateRenderer(d)}_updateRenderer(e){if(!e)return;const t=this.points(),n=this._source.properties(),i=n.median,r={points:[t[0],e.point],lineColor:i.color,lineWidth:i.linewidth,lineStyle:i.linestyle,extendLeft:n.extendLines,extendRight:!0,leftEnd:s.Normal,rightEnd:s.Normal};if(this._medianRenderer.setData(r),this._renderer.append(this._medianRenderer),t.length<3)return void this.addAnchors(this._renderer);const l={points:[t[1],t[2]],lineColor:i.color,lineWidth:i.linewidth,lineStyle:i.linestyle,extendLeft:!1,extendRight:!1,leftEnd:s.Normal,rightEnd:s.Normal};this._sideRenderer.setData(l),this._renderer.append(this._sideRenderer);const o=t[2].subtract(t[1]).scaled(.5),h=e.point.subtract(t[0]);let c=0;const p=n.fillBackground,u=n.transparency;n.levels.forEach((t=>{if(!t.visible)return;const i=t.coeff,r=t.color,l=t.linewidth,x=t.linestyle,m=e.point.addScaled(o,i),w=m.add(h),g=e.point.addScaled(o,-i),y=g.add(h);if(p){const t=e.point.addScaled(o,c),i={p1:m,p2:w,p3:t,p4:t.add(h),color:r,transparency:u,hittestOnBackground:!0,extendLeft:n.extendLines},s=new f;s.setData(i),this._renderer.append(s);const d=e.point.addScaled(o,-c),a={p1:g,p2:y,p3:d,p4:d.add(h),color:r,transparency:u,hittestOnBackground:!0,extendLeft:n.extendLines},l=new f;l.setData(a),this._renderer.append(l)}c=i;const R=new _,S={points:[m,w],lineColor:r,lineWidth:l,lineStyle:x,extendLeft:n.extendLines,extendRight:!0,leftEnd:s.Normal,rightEnd:s.Normal};R.setData(S),R.setHitTest(new d(a.MovePoint)),this._renderer.append(R);const L=new _,E={points:[g,y],lineColor:r,lineWidth:l,lineStyle:x,extendLeft:n.extendLines,extendRight:!0,leftEnd:s.Normal,rightEnd:s.Normal};L.setData(E),L.setHitTest(new d(a.MovePoint)),this._renderer.append(L)})),this.addAnchors(this._renderer)}}class w extends m{constructor(){super(...arguments),t(this,"_backSideRenderer",new _)}_calcModifiedBase(){if(this.points().length>1)return this.points()[0].add(this.points()[1]).scaled(.5)}_updateRenderer(e){const t=this.points();if((null==t?void 0:t.length)<2)return;const n=this._calcModifiedBase(),i=this._source.properties(),r=i.median;{const i={points:[t[0],t[1]],lineColor:r.color,lineWidth:r.linewidth,lineStyle:r.linestyle,extendLeft:!1,extendRight:!1,leftEnd:s.Normal,rightEnd:s.Normal};if(this._backSideRenderer.setData(i),this._renderer.append(this._backSideRenderer),!e||!n)return void this.addAnchors(this._renderer)}{const d={points:[n,e.point],lineColor:r.color,lineWidth:r.linewidth,lineStyle:r.linestyle,extendLeft:i.extendLines,extendRight:!0,leftEnd:s.Normal,rightEnd:s.Normal};if(this._medianRenderer.setData(d),this._renderer.append(this._medianRenderer),t.length<3)return void this.addAnchors(this._renderer)}{const e={points:[t[1],t[2]],lineColor:r.color,lineWidth:r.linewidth,lineStyle:r.linestyle,extendLeft:!1,extendRight:!1,leftEnd:s.Normal,rightEnd:s.Normal};this._sideRenderer.setData(e),this._renderer.append(this._sideRenderer)}{const r=t[2].subtract(t[1]).scaled(.5),l=e.point.subtract(n),o=i.fillBackground,h=i.transparency;let c=0;i.levels.forEach((t=>{if(!t.visible)return;const n=t.coeff,p=t.color,u=t.linewidth,x=t.linestyle,m=e.point.addScaled(r,n),w=m.add(l),g=e.point.addScaled(r,-n),y=g.add(l);if(o){const t=e.point.addScaled(r,c),n={p1:m,p2:w,p3:t,p4:t.add(l),color:p,transparency:h,hittestOnBackground:!0,extendLeft:i.extendLines},s=new f;s.setData(n),this._renderer.append(s);const d=e.point.addScaled(r,-c),a={p1:g,p2:y,p3:d,p4:d.add(l),color:p,transparency:h,hittestOnBackground:!0,extendLeft:i.extendLines},o=new f;o.setData(a),this._renderer.append(o)}c=n;const R={points:[m,w],lineColor:p,lineWidth:u,lineStyle:x,extendLeft:i.extendLines,extendRight:!0,leftEnd:s.Normal,rightEnd:s.Normal},S=new _;S.setData(R),S.setHitTest(new d(a.MovePoint)),this._renderer.append(S);const L={points:[g,y],lineColor:p,lineWidth:u,lineStyle:x,extendLeft:i.extendLines,extendRight:!0,leftEnd:s.Normal,rightEnd:s.Normal},E=new _;E.setData(L),E.setHitTest(new d(a.MovePoint)),this._renderer.append(E)}))}this.addAnchors(this._renderer)}}const g={[x.Original]:m,[x.Inside]:class extends m{constructor(){super(...arguments),t(this,"_backSideRenderer",new _),t(this,"_centerRenderer",new _)}_updateRenderer(e){const t=this.points();if((null==t?void 0:t.length)<2)return;const n=t[0].add(t[1]).scaled(.5);if(!e||!n)return void this.addAnchors(this._renderer);const i=this._source.properties(),r=i.median;if(3===t.length){const e={points:[n,t[2]],lineColor:r.color,lineWidth:r.linewidth,lineStyle:r.linestyle,extendLeft:!1,extendRight:!1,leftEnd:s.Normal,rightEnd:s.Normal};this._medianRenderer.setData(e),this._renderer.append(this._medianRenderer)}{const e={points:[t[0],t[1]],lineColor:r.color,lineWidth:r.linewidth,lineStyle:r.linestyle,extendLeft:!1,extendRight:!1,leftEnd:s.Normal,rightEnd:s.Normal};if(this._backSideRenderer.setData(e),this._renderer.append(this._backSideRenderer),t.length<3)return void this.addAnchors(this._renderer)}{const e={points:[t[1],t[2]],lineColor:r.color,lineWidth:r.linewidth,lineStyle:r.linestyle,extendLeft:!1,extendRight:!1,leftEnd:s.Normal,rightEnd:s.Normal};this._sideRenderer.setData(e),this._renderer.append(this._sideRenderer)}{const l=t[2].subtract(t[1]).scaled(.5),o=t[2].subtract(n);let h=0;const c=i.fillBackground,p=i.transparency,u={points:[e.point,e.point.add(o)],lineColor:r.color,lineWidth:r.linewidth,lineStyle:r.linestyle,extendLeft:i.extendLines,extendRight:!0,leftEnd:s.Normal,rightEnd:s.Normal};this._centerRenderer.setData(u),this._renderer.append(this._centerRenderer),i.levels.forEach((t=>{if(t.visible){const n=t.coeff,r=t.color,u=t.linewidth,x=t.linestyle,m=e.point.addScaled(l,n),w=m.add(o),g=e.point.addScaled(l,-n),y=g.add(o);if(c){{const t=e.point.addScaled(l,h),n={p1:m,p2:w,p3:t,p4:t.add(o),color:r,transparency:p,hittestOnBackground:!0,extendLeft:i.extendLines},s=new f;s.setData(n),this._renderer.append(s)}{const t=e.point.addScaled(l,-h),n={p1:g,p2:y,p3:t,p4:t.add(o),color:r,transparency:p,hittestOnBackground:!0,extendLeft:i.extendLines},s=new f;s.setData(n),this._renderer.append(s)}}h=n;const R=new _;R.setData({points:[m,w],lineColor:r,lineWidth:u,lineStyle:x,extendLeft:i.extendLines,extendRight:!0,leftEnd:s.Normal,rightEnd:s.Normal}),R.setHitTest(new d(a.MovePoint)),this._renderer.append(R);const S=new _;S.setData({points:[g,y],lineColor:r,lineWidth:u,lineStyle:x,extendLeft:i.extendLines,extendRight:!0,leftEnd:s.Normal,rightEnd:s.Normal}),S.setHitTest(new d(a.MovePoint)),this._renderer.append(S)}}))}this.addAnchors(this._renderer)}},[x.SchiffModified]:w,[x.Schiff]:class extends w{_calcModifiedBase(){var e;if((null==(e=this.points())?void 0:e.length)>2){const e=this.points()[0].x,t=.5*(this.points()[0].y+this.points()[1].y);return new l(e,t)}}}};class y extends p{constructor(){super(...arguments),t(this,"_paneView",[]),t(this,"_priceAxisPaneViews",[new o(Object.create(null))]),t(this,"_timeAxisPaneViews",[new h(Object.create(null))]),t(this,"_timeAxisViews",[new i(Object.create(null)),new i(Object.create(null)),new i(Object.create(null))]),t(this,"_priceAxisViews",[new n(Object.create(null)),new n(Object.create(null)),new n(Object.create(null))])}pointsCount(){return 3}ensurePaneView(){var e;if(!(null==(e=this._paneView)?void 0:e.length)){const e=g[this._props.style];this._paneView=[new e(this,this.model)]}}updateAllViews(){if(!this.controlPoints.length)return;const e=[];for(let i=0;i<this.controlPoints.length;i++){const t=this.controlPoints[i],n=this.pointToScreenPoint(t);if(!n)return;e.push(new r(n,{pointIndex:i}))}const t=e.map((e=>e.x)),n=e.map((e=>e.y));this.controlPoints.forEach(((t,n)=>{this._timeAxisViews[n].update(this._calculateTimeAxisViewData(t.time,e[n].x)),this._priceAxisViews[n].update(this._calculatePriceAxisViewData(t.price,e[n].y))})),t.length>1&&this._timeAxisPaneViews[0].update(this._calculateTimeAxisPaneViewsData(Math.min.apply(null,t),Math.max.apply(null,t))),n.length>1&&this._priceAxisPaneViews[0].update(this._calculatePriceAxisPaneViewData(Math.min.apply(null,n),Math.max.apply(null,n))),this.ensurePaneView(),this._paneView[0].update({points:e})}}export{y as P,x as a};
