var e=Object.defineProperty,t=(t,i,s)=>((t,i,s)=>i in t?e(t,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[i]=s)(t,"symbol"!=typeof i?i+"":i,s);import{T as i,a as s,D as r}from"./toolPaneView-BkZhzbTB.js";import{ai as a}from"./index-iNH1zFVl.js";import{B as n,c6 as o,y as l,z as c,bK as h,A as p}from"./index-5gyre0hA.js";import{P as u}from"./priceLabelPriceAxisView-CKrbEFjY.js";import{T as d}from"./timeLabelTimeAxisView-DLVMuesT.js";import{P as m,T as x}from"./axisPaneView-B6qY_qE1.js";import{C as w}from"./composite-CCMtJLBO.js";import"./baseTool-BM5mqL4_.js";class _ extends n{drawImpl(e){if(!this._data)return;const{center:t,radius:i,lineWidth:s,color:r,background:a}=this._data,n=e.context;n.save();const{horizontalPixelRatio:o,verticalPixelRatio:l}=e,c=Math.max(1,Math.floor(o)),h=c%2/2,p=Math.round(t.x*o)+h,u=Math.round(t.y*l)+h,d=Math.round(p+i*o),m=Math.max(1,Math.floor(s*o)),x=d-p-m;x>0&&(n.fillStyle=a,n.beginPath(),n.moveTo(p+x,u),n.arc(p,u,x,0,2*Math.PI,!1),n.fill());const w=Math.max(c/2,d-p-m/2);n.strokeStyle=r,n.lineWidth=m,n.beginPath(),n.moveTo(p+w,u),n.arc(p,u,w,0,2*Math.PI,!1),n.stroke()}hitTest(e){if(!this._data)return null;const{center:t,radius:i}=this._data,s=h().curve;return o(e,t,i+s)?i>s&&o(e,t,i-s)?null:new l(c.MovePoint):null}}class P extends i{constructor(){super(...arguments),t(this,"_renderer",new w(this._hitTestCollector)),t(this,"_circleRenderer",new _)}renderer(){return this._renderer}_updateImpl(){if(this._renderer.clear(),this.points().length<2)return;const e=this._source.properties(),[t,i]=this.points(),s=Math.hypot(t.x-i.x,t.y-i.y);this._circleRenderer.setData({center:t,radius:s,color:e.lineColor,lineWidth:e.lineWidth,background:e.backgroundColor}),this._renderer.append(this._circleRenderer),this._renderer.append(this.createLineAnchor({points:[t,i]}))}}class A extends s{constructor(){super(...arguments),t(this,"_lines",new P(this,this.model)),t(this,"_paneView",[this._lines]),t(this,"_priceAxisPaneViews",[new m(Object.create(null))]),t(this,"_timeAxisPaneViews",[new x(Object.create(null))]),t(this,"_timeAxisViews",[new d(Object.create(null)),new d(Object.create(null))]),t(this,"_priceAxisViews",[new u(Object.create(null)),new u(Object.create(null))])}pointsCount(){return 2}updateAllViews(){if(!this.controlPoints.length)return;const e=[],t=[],[i,s]=this.controlPoints,r=[];for(let a=0;a<this.controlPoints.length;a++){const i=this.controlPoints[a],s=this.pointToScreenPoint(i);if(!s)return;e.push(s.x),t.push(s.y);const n=new p(s,{pointIndex:a,hitTarget:0===a?c.MovePoint:c.ChangePoint});r.push(n)}this._timeAxisViews[0].update(this._calculateTimeAxisViewData(i.time,r[0].x)),this._priceAxisViews[0].update(this._calculatePriceAxisViewData(i.price,r[0].y)),s&&(this._timeAxisViews[1].update(this._calculateTimeAxisViewData(s.time,r[1].x)),this._priceAxisViews[1].update(this._calculatePriceAxisViewData(s.price,r[1].y))),e.length&&this._timeAxisPaneViews[0].update(this._calculateTimeAxisPaneViewsData(Math.min.apply(null,e),Math.max.apply(null,e))),t.length&&this._priceAxisPaneViews[0].update(this._calculatePriceAxisPaneViewData(Math.min.apply(null,t),Math.max.apply(null,t))),this._lines.update({points:r})}}class V extends r{constructor(){super(...arguments),t(this,"type",a)}createPrimitive(){return new A({id:this.id,points:[],lineColor:"#FF9800FF",lineWidth:2,backgroundColor:"#FF980033"},...this.resetArgs)}}export{V as CircleTool};
