var t=Object.defineProperty,e=(e,i,s)=>((e,i,s)=>i in e?t(e,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[i]=s)(e,"symbol"!=typeof i?i+"":i,s);import{u as i,bD as s,y as a,z as n,aZ as r,A as h,L as o}from"./index-5gyre0hA.js";import{T as l,a as c,D as d}from"./toolPaneView-BkZhzbTB.js";import{p}from"./index-iNH1zFVl.js";import{P as u}from"./priceLabelPriceAxisView-CKrbEFjY.js";import{T as _}from"./timeLabelTimeAxisView-DLVMuesT.js";import{P as x,T as m}from"./axisPaneView-B6qY_qE1.js";import{C as w}from"./composite-CCMtJLBO.js";import"./baseTool-BM5mqL4_.js";class y extends s{hitTest(t){if(!this._data)return null;const e=(t.x-this._data.point.x)*Math.PI/this._data.width,i=Math.sin(e-Math.PI/2)*(this._data.height/2),s=this._data.point.y+i+this._data.height/2;return Math.abs(s-t.y)<=3?new a(n.MovePoint):null}drawImpl(t){if(!this._data)return;const e=t.context;e.strokeStyle=this._data.color,e.lineWidth=this._data.lineWidth,r(e,this._data.lineStyle),e.beginPath(),e.moveTo(this._data.point.x,this._data.point.y);const i=Math.max(1,this._data.width/30),s=t.mediaSize.width-this._data.point.x+i;for(let a=1;a<=s;a+=i){const t=a*Math.PI/this._data.width,i=Math.sin(t-Math.PI/2)*(this._data.height/2),s=this._data.point.x+a,n=this._data.point.y+i+this._data.height/2;e.lineTo(s,n)}e.stroke()}}class P extends l{constructor(){super(...arguments),e(this,"_renderer",new w(this._hitTestCollector))}renderer(){return this._renderer}_updateImpl(){this._renderer.clear();const t=this.points();if((null==t?void 0:t.length)<2)return;const e=this._source.getScope().mediaSize.height,[s,a]=t;if(2*Math.abs(s.x-a.x)==0)return void this.addAnchors(this._renderer);const[n,r]=t,h=Math.abs(n.x-r.x),o=r.y-n.y,l=this._source.properties(),c=l.lineWidth,d=n.y<-c&&r.y<-c,p=n.y>e+c&&r.y>e+c;if(d||p)return;const u=2*h,_=n.x>0?n.x-Math.ceil(n.x/u)*u:n.x+Math.floor(-n.x/u)*u,x={point:new i(_,n.y),width:h,height:o,color:l.lineColor,lineWidth:c,lineStyle:l.lineStyle};this._renderer.append(new y(x)),this.addAnchors(this._renderer)}}class f extends c{constructor(){super(...arguments),e(this,"_lines",new P(this,this.model)),e(this,"_paneView",[this._lines]),e(this,"_priceAxisPaneViews",[new x(Object.create(null))]),e(this,"_timeAxisPaneViews",[new m(Object.create(null))]),e(this,"_timeAxisViews",[new _(Object.create(null)),new _(Object.create(null))]),e(this,"_priceAxisViews",[new u(Object.create(null)),new u(Object.create(null))])}pointsCount(){return 2}updateAllViews(){if(!this.controlPoints.length)return;const t=[];for(let s=0;s<this.controlPoints.length;s++){const e=this.controlPoints[s],i=this.pointToScreenPoint(e);if(!i)return;t.push(new h(i,{pointIndex:s}))}const e=t.map((t=>t.x)),i=t.map((t=>t.y));this.controlPoints.forEach(((e,i)=>{this._timeAxisViews[i].update(this._calculateTimeAxisViewData(e.time,t[i].x)),this._priceAxisViews[i].update(this._calculatePriceAxisViewData(e.price,t[i].y))})),e.length>1&&this._timeAxisPaneViews[0].update(this._calculateTimeAxisPaneViewsData(Math.min.apply(null,e),Math.max.apply(null,e))),i.length>1&&this._priceAxisPaneViews[0].update(this._calculatePriceAxisPaneViewData(Math.min.apply(null,i),Math.max.apply(null,i))),this._lines.update({points:t})}}class b extends d{constructor(){super(...arguments),e(this,"type",p)}createPrimitive(){return new f({id:this.id,points:[],lineColor:"#159980FF",lineWidth:2,lineStyle:o.solid},...this.resetArgs)}}export{b as SineLineTool};
